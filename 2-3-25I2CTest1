#include <stdio.h>
#include "pico/stdlib.h"
#include "hardware/i2c.h"

// I2C settings
#define I2C_PORT i2c0
#define SDA_PIN 4
#define SCL_PIN 5
#define LCD_ADDR 0x2A  // CFA634 I2C address

// Function to send data to the LCD
void i2c_write_lcd(uint8_t *data, size_t len) {
    int result = i2c_write_blocking(I2C_PORT, LCD_ADDR, data, len, false);
    if (result < 0) {
        printf("I2C Write Error: %d\n", result);
    } else {
        printf("Sent %d bytes to LCD\n", result);
    }
}

int main() {
    stdio_init_all(); // Initialize USB serial output
    sleep_ms(2000);   // Delay for serial connection
    printf("Starting LCD I2C communication...\n");

    // Initialize I2C
    i2c_init(I2C_PORT, 100000);
    gpio_set_function(SDA_PIN, GPIO_FUNC_I2C);
    gpio_set_function(SCL_PIN, GPIO_FUNC_I2C);
    gpio_pull_up(SDA_PIN);
    gpio_pull_up(SCL_PIN);
    printf("I2C initialized\n");

    // Clear screen command (0x06)
    uint8_t clear_cmd[] = { 0x06 };
    printf("Clearing screen...\n");
    i2c_write_lcd(clear_cmd, 1);
    sleep_ms(500);

    // Print "Hello, World!" on LCD
    uint8_t text_cmd[] = { 'H', 'e', 'l', 'l', 'o', ',', ' ', 'W', 'o', 'r', 'l', 'd', '!' };
    printf("Writing message: Hello, World!\n");
    i2c_write_lcd(text_cmd, sizeof(text_cmd));

    while (1) {
        sleep_ms(1000);
    }
}
